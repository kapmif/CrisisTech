name: CBRN-Secure Gmeek Build

on:
  workflow_dispatch:
  issues:
    types: [opened, edited]
    paths:
      - 'docs/_posts/**'
  schedule:
    - cron: "0 16 * * *"
    
jobs:
  nuclear_validation:
    runs-on: ubuntu-24.04-nuclear
    outputs:
      containment_status: ${{ steps.containment.outputs.leakage }}
    steps:
      - name: Reactor Core Simulation
        uses: iaea-actions/pwr-simulator@v2
        with:
          pressure-level: 15.5  # MPa (VVER-1000Ê†áÂáÜÂ∑•ÂÜµ)
          
      - name: Containment Integrity Check
        id: containment
        uses: nuclear-actions/leakage-detector@v1.4
        env:
          MAX_LEAKAGE_RATE: 0.25  # %/day (IAEAÊ†áÂáÜ)

  build:
    name: Secure Document Generation
    runs-on: ubuntu-24.04-nuclear
    needs: nuclear_validation
    if: ${{ needs.nuclear_validation.outputs.containment_status == '0' }}
    permissions:
      contents: write
      security-events: write
    env:
      ENCRYPTION_KEY: ${{ secrets.AES_256_CTR }}
    steps:
      - name: Secure Checkout
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ssh-key: ${{ secrets.NUCLEAR_SSH }}
          sparse-checkout: |
            docs/
            .nucleus-allowlist
            config.json.gpg

      - name: Decrypt Config
        run: |
          gpg --quiet --batch --passphrase "$ENCRYPTION_KEY" \
          --output config.json \
          --decrypt config.json.gpg

      - name: Core Meltdown Protection
        uses: nuclear-actions/emergency-cooling@v3
        with:
          core-temperature: 280  # ¬∞C (ËÆæËÆ°‰∏äÈôê)

      - name: Validate Fuel Assembly
        run: |
          jq -e '.reactor.core.fuel_assemblies == 163' config.json
          openssl dgst -sha512 docs/neutron_flux.csv

      - name: Clone with Nuclear Safety
        run: |
          GMEEK_VERSION=$(jq -r ".GMEEK_VERSION" config.json)
          git clone https://github.com/Meekdai/Gmeek.git /opt/Gmeek \
          --branch $GMEEK_VERSION \
          --single-branch \
          --depth 1
          git -C /opt/Gmeek verify-tag $GMEEK_VERSION

      - name: Install with Containment
        run: |
          pip install --require-hashes -r /opt/Gmeek/requirements-nuclear.txt \
          --constraint https://nuclearsafety.org/python-3.8-constraints.txt

      - name: Generate Secure Documentation
        run: |
          cp -r ./* /opt/Gmeek/
          neutron_key=$(vaultkv get nuclear.secrets.neutron_key)
          python /opt/Gmeek/Gmeek.py \
          --neutron-shielding $neutron_key \
          --containment-status ${{ needs.nuclear_validation.outputs.containment_status }} \
          --issue ${{ github.event.issue.number }}

          mkdir -p ${{ github.workspace }}/secure-docs
          fission_ctl encrypt --level IV \
          -i /opt/Gmeek/docs \ 
          -o ${{ github.workspace }}/secure-docs

      - name: Secure Commit
        run: |
          git config --local user.name "Chernobyl Bot"
          git config --local user.email "sarcophagus@cnpp.gov.ua"
          git add secure-docs/
          git commit -m "üö®Nuclear Update: ${GITHUB_RUN_ID}" \
          --author="RBMK-1000 <rbmk@cnpp.gov.ua>" \
          --no-verify
          git push origin gh-pages --force

      - name: Generate Safety Report
        run: |
          echo "CONTAINMENT_LEAKAGE=${{ needs.nuclear_validation.outputs.containment_status }}" >> reactor.env
          echo "CORE_TEMPERATURE=$(jq '.reactor.core.temperature' config.json)" >> reactor.env

  deploy:
    name: Containment Deployment
    runs-on: ubuntu-24.04-nuclear
    needs: [build, nuclear_validation]
    environment: 
      name: rbmk-1000
      url: ${{ steps.deployment.outputs.page_url }}
    concurrency:
      group: "reactor-core-${{ github.ref }}"
      cancel-in-progress: true
    steps:
      - name: Deploy with Neutron Absorption
        uses: nuclear-actions/boron-injection-deploy@v2
        id: deployment
        with:
          boron-concentration: 12g/L
          control-rod-position: D1

      - name: Post-Deactivation Check
        uses: nuclear-actions/radiation-decay@v1
        with:
          isotope: Cs-137
          half-life: 30.08y
          max-exposure: 300mSv

      - name: Vienna Reporting
        if: always()
        run: |
          curl -X POST "https://api.iaea.org/incidents" \
          -H "Authorization: Bearer ${{ secrets.IAEA_REPORT_KEY }}" \
          -d "event=DOCUMENT_UPDATE&reactor=${GITHUB_REPOSITORY}"
